- set_page_title "Add Video #{@building && "to #{@building.name}"}#{@person && "to #{@person.name}"}"

= error_messages_for @asset

= simple_form_for @asset, html: { id: 'photo-wizard', data: { controller: 'photo-wizard' } } do |form|
  .card.active
    .float-right
      button.btn.btn-secondary.btn-next.step-1-next-button type="button" disabled=form.object.remote_url.blank? Next &raquo;
    .card-body
      .row
        .col-xs-12
          = form.input :remote_url, label: 'Video URL', hint: 'Link to page on external site such as YouTube or Vimeo.'
    .card-footer.d-flex.justify-content-center
      button.btn.btn-secondary.btn-lg.btn-next.step-1-next-button type="button" disabled=form.object.remote_url.blank? Next &raquo;

  .card
    = render 'media/wizard_header_nav_buttons'
    .card-body
      .row
        .col-sm-8.col-xs-12
          = form.input :caption, as: :text, label: "Caption", hint: "The Caption is text that appears underneath the video on the building or person record. Note that the caption should not include the date which is a separate field that will display along with the caption."
          = form.input :description, as: :text, label: "Description", hint: "The Description is secondary text that appears when someone selects the video to watch it. The Description can be standard text used to identify the collection that houses the video in your institution, or it can be used in whichever way your institution sees fit."

    = render 'media/wizard_footer_nav_buttons'

  .card
    = render 'media/wizard_header_nav_buttons'
    .card-body
      .row
        .col-sm-8.col-xs-12
          = render 'media/buildings', form:, question: 'Does this video pertain to a building?'
    = render 'media/wizard_footer_nav_buttons'

  .card
    = render 'media/wizard_header_nav_buttons'
    .card-body
      .row
        .col-sm-8.col-xs-12
          = render 'media/people', form:, question: 'Does a person feature in this video?'
    = render 'media/wizard_footer_nav_buttons'

  .card
    = render 'media/wizard_header_nav_buttons'
    .card-body
      .row
        .col-sm-8.col-xs-12
          = render 'media/map_location', form:
    = render 'media/wizard_footer_nav_buttons'

  .card
    = render 'media/wizard_header_nav_buttons'
    .card-body
      .row
        .col-sm-8.col-xs-12
          = render 'media/date_fields', form:
    = render 'media/wizard_footer_nav_buttons'

  .card
    .float-right
      button.btn.btn-secondary.btn-prev type="button" &laquo; Previous
    .card-body
      .row
        .col-sm-8.col-xs-12
          = form.input :notes
    .card-footer.d-flex.justify-content-center
      = form.submit 'Submit', class: 'btn btn-lg btn-primary'

p.clearfix.lead.text-center You can click Previous and Next buttons at any time.

script async="async" defer="defer" src="https://maps.googleapis.com/maps/api/js?key=#{AppConfig[:google_api_key]}&libraries=places"
