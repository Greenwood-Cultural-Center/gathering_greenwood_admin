- content_for :pills do
  = link_to 'Add Narrative', { action: :new }, class: 'btn btn-light'

- set_page_title "Narratives #{@building && "of #{@building.name}"}#{@person && "of #{@person.name}"}"

- content_for :pills do
  - if @building
    = link_to 'Building', @building, class: 'btn btn-default'
  -if @person
    = link_to 'Person', @person, class: 'btn btn-default'
  a.btn.btn-default type="button" data-toggle="collapse" href="#filters" Filters

.collapse#filters
  = search_form_for @search, as: :q, builder: SimpleForm::FormBuilder do |form|
    - if can?(:review, Narrative)
      = form.input :unreviewed_only, as: :boolean, label: 'Show only unreviewed', wrapper: :inline_boolean
    .card-footer
      = form.submit 'Search', class: 'btn btn-primary'
      = link_to 'Reset', narratives_path(reset: true), class: 'btn btn-light'

- if params[:q]
  h3
    | Searching for #{[params[:q][:full_text_search], !!params[:q][:unreviewed_only] ? 'unreviewed' : nil].compact_blank.join(' and ')}

= page_entries_info @assets

.list-group
  - @assets.each do |record|
    .list-group-item
      .row
        .col-xl-6.col-lg-6.col-sm-12.col-xs-12.col-md-6.widest
          = link_to record, class: 'btn btn-xs btn-light' do
            i.fa.fa-eye
          - if can?(:update, record)
            = link_to [:edit, record], class: 'btn btn-xs btn-light' do
              i.fa.fa-pencil
          - unless record.reviewed?
            span.badge.badge-danger.ml-2  UNREVIEWED
          p= truncate record.story.to_plain_text, length: 250
          p= "Submitted by #{record.created_by.login} on #{record.created_at.to_formatted_s(:long)}"
        .col-xl-6.col-lg-6.col-sm-12.col-xs-12.col-md-6.widest
          - source = record.sources.present? ? record.sources.to_plain_text : record.source
          p= truncate source, length: 150
          p= record.buildings.map { |building| link_to(building.street_address, building) }.join('<br />').html_safe
          p= record.people.map { |person| link_to(person.name, person) }.join('<br />').html_safe

= paginate @assets
